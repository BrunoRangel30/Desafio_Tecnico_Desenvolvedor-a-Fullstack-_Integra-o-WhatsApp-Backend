datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ============================
// ENUMS
// ============================
enum SessionStatus {
  open
  connected
  disconnected
  close
  pending
  qr
}

enum MessageType {
  text
  image
  video
  audio
  file
  sticker
  unknown
}

// ============================
// MODELS
// ============================
model User {
  id        String            @id @default(uuid())
  email     String            @unique
  name      String?
  password  String?
  createdAt DateTime          @default(now())

  sessions  WhatsAppSession[]
}

model WhatsAppSession {
  id          String           @id @default(uuid())
  sessionId   String           @unique
  user        User?            @relation(fields: [userId], references: [id])
  userId      String?
  status      SessionStatus    @default(open)
  pairingCode String?
  qr          String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  conversations Conversation[]
}

model Conversation {
  id            String           @id @default(uuid())
  session       WhatsAppSession  @relation(fields: [sessionId], references: [sessionId])
  sessionId     String
  contactJid    String
  contactName   String?
  lastMessageAt DateTime?

  messages Message[]

  @@unique([sessionId, contactJid]) 
}

model Message {
  id             String       @id @default(uuid())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  waId           String
  fromMe         Boolean
  body           String       @db.Text
  type           MessageType  @default(text)
  createdAt      DateTime     @default(now())
}
